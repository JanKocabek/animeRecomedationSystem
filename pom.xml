<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.6</version>
		<relativePath /> <!-- lookup parent from a repository -->
	</parent>

	<groupId>cz.kocabek</groupId>
	<artifactId>animeRecomedationSystem</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>animeRecommendationSystem</name>
	<description>animeRecommendationSystem</description>

	<url>https://github.com/JanKocabek/animeRecomedationSystem</url>
	<licenses>
		<license>
			<name>GPL-3.0 license</name>
			<url>https://www.gnu.org/licenses/gpl-3.0.en.html</url>
		</license>
	</licenses>
	<developers>
		<developer>
			<id>kocabek</id>
			<name>Jan Koc√°bek</name>
			<email>jankocabek93@gmail.com</email>
		</developer>
	</developers>
	<scm>
		<connection>scm:git:git://github.com/JanKocabek/animeRecomedationSystem.git</connection>
		<developerConnection>scm:git:ssh://github.com/JanKocabek/animeRecomedationSystem.git</developerConnection>
		<url>https://github.com/JanKocabek/animeRecomedationSystem</url>
		<tag>HEAD</tag>
	</scm>
	<properties>
		<java.version>24</java.version>
		<google-cloud-sql.version>1.26.1</google-cloud-sql.version>
	</properties>

	<dependencies>
		<!-- Spring Boot Starters -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- Thymeleaf Security Integration -->
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity6</artifactId>
		</dependency>

		<!-- Database -->
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Google Cloud SQL (Production only) -->
		<dependency>
			<groupId>com.google.cloud.sql</groupId>
			<artifactId>mysql-socket-factory-connector-j-8</artifactId>
			<version>${google-cloud-sql.version}</version>
			<optional>true</optional>
		</dependency>

		<!-- Development Tools -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-docker-compose</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- Environment Configuration -->
		<dependency>
			<groupId>me.paulschwarz</groupId>
			<artifactId>spring-dotenv</artifactId>
			<version>4.0.0</version>
		</dependency>

		<!-- Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>AnimeRecommendationApp</finalName>
		<plugins>
			<!-- Compiler Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>

			<!-- Spring Boot Plugin -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- AsciiDoctor Plugin for REST Docs -->
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>generate-docs</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>html</backend>
							<doctype>book</doctype>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.springframework.restdocs</groupId>
						<artifactId>spring-restdocs-asciidoctor</artifactId>
						<version>${spring-restdocs.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- Development Profile (IDE/Local Machine) -->
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<spring.profiles.active>dev</spring.profiles.active>
			</properties>
			<dependencies>
				<!-- Dev tools only in dev profile -->
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-devtools</artifactId>
					<scope>runtime</scope>
					<optional>true</optional>
				</dependency>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-docker-compose</artifactId>
					<scope>runtime</scope>
					<optional>true</optional>
				</dependency>
			</dependencies>

		</profile>
		<!-- 1. BASE PROFILE: Contains the common exclusion configuration for the final JAR. -->

		<!-- This profile will be activated alongside 'local' or 'prod' builds. -->

		<profile>
			<id>container-build-base</id>
			<build>
				<plugins>
					<!-- Spring Boot Plugin: Excludes dev dependencies from the JAR -->
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<excludes>
								<exclude>
									<groupId>org.projectlombok</groupId>
									<artifactId>lombok</artifactId>
								</exclude>
								<exclude>
									<groupId>org.springframework.boot</groupId>
									<artifactId>spring-boot-devtools</artifactId>
								</exclude>
								<exclude>
									<groupId>org.springframework.boot</groupId>
									<artifactId>spring-boot-docker-compose</artifactId>
								</exclude>
							</excludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- 2. Local Docker Profile (Docker Compose) -->

		<profile>
			<id>local</id>
			<properties>
				<spring.profiles.active>local</spring.profiles.active>
			</properties>
			<!-- The final JAR cleanup is provided by 'container-build-base' -->
		</profile>

		<!-- 3. Production Profile (Google Cloud) - Now contains only unique dependencies -->

		<profile>
			<id>prod</id>
			<properties>
				<spring.profiles.active>prod</spring.profiles.active>
			</properties>
			<dependencies>
				<!-- Google Cloud SQL required for production -->
				<dependency>
					<groupId>com.google.cloud.sql</groupId>
					<artifactId>mysql-socket-factory-connector-j-8</artifactId>
					<version>${google-cloud-sql.version}</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<!-- No unique plugins are needed here. -->
				</plugins>
			</build>
		</profile>

		<!-- This profile is NOT active by default. It must be run manually: mvn verify
	-Pdependency-check -->
		<profile>
			<id>dependency-check</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>3.9.0</version>
						<executions>
							<execution>
								<id>analyze-dependencies</id>
								<phase>verify</phase>
								<goals>
									<goal>analyze-only</goal>
								</goals>
								<configuration>
									<failOnWarning>false</failOnWarning>
									<ignoreNonCompile>true</ignoreNonCompile>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

</project>